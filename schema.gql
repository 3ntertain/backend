# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Game {
  id: Int!
  name: String!
  symbol: String!
  logo: String!
  banner: String!
  background: String!
  type: String!
  url: String!
  description: String
  twitter: String
  discord: String
  modes: [Mode!]!
}

type Setting {
  id: Int!
  name: String!
  label: String!
  description: String
  type: SettingsType!
  options: String
  modeId: Int!
  mode: Mode!
}

enum SettingsType {
  SELECT
  CHECKBOX
}

type Pricing {
  id: Int!
  name: String!
  price: Float!
  type: PricingType!
  condition: String
  modeId: Int!
  mode: Mode!
}

enum PricingType {
  FLAT
  PERPLAYER
}

type Mode {
  id: Int!
  name: String!
  banner: String!
  background: String!
  createApiUrl: String!
  getApiUrl: String!
  active: Boolean!
  description: String
  configuration: String
  gameId: Int!
  game: Game!
  settings: [Setting!]!
  pricings: [Pricing!]!
  happenings: [Happening!]!
}

type Happening {
  id: Int!
  address: String!
  public: Boolean!
  name: String!
  description: String
  start: DateTime!
  end: DateTime!
  startIn: Int!
  endIn: Int!
  price: Float!
  slots: Int!
  availableSlots: Int!
  creator: String!
  ticket: String!
  status: String!
  creatorFee: Int!
  configuration: String
  token: String
  rewards: String
  modeId: Int!
  mode: Mode!
  leaderboard: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  games: [Game!]!
  game(id: Int!): Game!
  modes: [Mode!]!
  mode(id: Int!): Mode!
  settings: [Setting!]!
  setting(id: Int!): Setting!
  pricings: [Pricing!]!
  pricing(id: Int!): Pricing!
  ongoingHappenings: [Happening!]!
  endedHappenings: [Happening!]!
  upcomingHappenings: [Happening!]!
  happening(address: String!): Happening!
  leaderboard(address: String!): [Happening!]!
}

type Mutation {
  createHappening(createHappeningInput: CreateHappeningInput!): Happening!
  updateHappening(updateHappeningInput: UpdateHappeningInput!): Happening!
  createUpload(createUploadInput: CreateUploadInput!): Boolean!
}

input CreateHappeningInput {
  name: String!
  public: Boolean! = false
  description: String
  address: String
  start: DateTime!
  end: DateTime!
  price: Float!
  slots: Int!
  availableSlots: Int!
  creator: String!
  creatorFee: Int!
  configuration: String
  token: String
  rewards: String
  ticket: String!
  modeId: Int!
}

input UpdateHappeningInput {
  name: String
  public: Boolean = false
  description: String
  address: String
  start: DateTime
  end: DateTime
  price: Float
  slots: Int
  availableSlots: Int
  creator: String
  creatorFee: Int
  configuration: String
  token: String
  rewards: String
  ticket: String
  modeId: Int
  id: Int!
}

input CreateUploadInput {
  name: String!
  file: String!
}