# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Game {
  id: Int!
  name: String!
  symbol: String!
  logo: String!
  banner: String!
  background: String!
  type: String!
  url: String!
  description: String
  twitter: String
  discord: String
  modes: [Mode!]!
}

type Setting {
  id: Int!
  name: String!
  label: String!
  description: String
  type: SettingsType!
  options: String
  modeId: Int!
  mode: Mode!
}

enum SettingsType {
  SELECT
  CHECKBOX
}

type Pricing {
  id: Int!
  name: String!
  price: Float!
  type: PricingType!
  condition: String
  modeId: Int!
  mode: Mode!
}

enum PricingType {
  FLAT
  PERPLAYER
}

type Mode {
  id: Int!
  name: String!
  banner: String!
  background: String!
  createApiUrl: String!
  getApiUrl: String!
  active: Boolean!
  description: String
  configuration: String
  gameId: Int!
  game: Game!
  settings: [Setting!]!
  pricings: [Pricing!]!
  happenings: [Happening!]!
}

type Happening {
  id: Int!
  name: String!
  description: String
  start: DateTime!
  end: DateTime!
  price: Float!
  slots: Int!
  creatorFee: Int!
  configuration: String
  token: String
  rewards: String
  modeId: Int!
  mode: Mode!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  games: [Game!]!
  game(id: Int!): Game!
  modes: [Mode!]!
  mode(id: Int!): Mode!
  settings: [Setting!]!
  setting(id: Int!): Setting!
  pricings: [Pricing!]!
  pricing(id: Int!): Pricing!
  happenings: [Happening!]!
  happening(id: Int!): Happening!
}

type Mutation {
  createGame(createGameInput: CreateGameInput!): Game!
  updateGame(updateGameInput: UpdateGameInput!): Game!
  removeGame(id: Int!): Game!
  createMode(createModeInput: CreateModeInput!): Mode!
  updateMode(updateModeInput: UpdateModeInput!): Mode!
  removeMode(id: Int!): Mode!
  createSetting(createSettingInput: CreateSettingInput!): Setting!
  updateSetting(updateSettingInput: UpdateSettingInput!): Setting!
  removeSetting(id: Int!): Setting!
  createPricing(createPricingInput: CreatePricingInput!): Pricing!
  updatePricing(updatePricingInput: UpdatePricingInput!): Pricing!
  removePricing(id: Int!): Pricing!
  createHappening(createHappeningInput: CreateHappeningInput!): Happening!
  updateHappening(updateHappeningInput: UpdateHappeningInput!): Happening!
  removeHappening(id: Int!): Happening!
}

input CreateGameInput {
  name: String!
  symbol: String!
  logo: String!
  banner: String!
  background: String!
  type: String!
  url: String!
  description: String
  twitter: String
  discord: String
}

input UpdateGameInput {
  name: String
  symbol: String
  logo: String
  banner: String
  background: String
  type: String
  url: String
  description: String
  twitter: String
  discord: String
  id: Int!
}

input CreateModeInput {
  name: String!
  banner: String!
  background: String!
  createApiUrl: String!
  getApiUrl: String!
  active: Boolean!
  description: String
  configuration: String
  gameId: Int!
}

input UpdateModeInput {
  name: String
  banner: String
  background: String
  createApiUrl: String
  getApiUrl: String
  active: Boolean
  description: String
  configuration: String
  gameId: Int
  id: Int!
}

input CreateSettingInput {
  name: String!
  label: String!
  description: String
  type: SettingsType!
  options: String
  modeId: Int!
}

input UpdateSettingInput {
  name: String
  label: String
  description: String
  type: SettingsType
  options: String
  modeId: Int
  id: Int!
}

input CreatePricingInput {
  name: String!
  price: Float!
  type: PricingType!
  condition: String
  modeId: Int!
}

input UpdatePricingInput {
  name: String
  price: Float
  type: PricingType
  condition: String
  modeId: Int
  id: Int!
}

input CreateHappeningInput {
  name: String!
  description: String
  start: DateTime!
  end: DateTime!
  price: Float!
  slots: Int!
  creatorFee: Int!
  configuration: String
  token: String
  rewards: String
  modeId: Int!
}

input UpdateHappeningInput {
  name: String
  description: String
  start: DateTime
  end: DateTime
  price: Float
  slots: Int
  creatorFee: Int
  configuration: String
  token: String
  rewards: String
  modeId: Int
  id: Int!
}